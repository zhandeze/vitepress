import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.bb8e4904.js";const d=JSON.parse('{"title":"proxy的使用方法","description":"","frontmatter":{"title":"proxy的使用方法","isTimeLine":true,"date":"2021-12-24T11:14:39.000Z"},"headers":[],"relativePath":"weakmap.md","filePath":"weakmap.md"}'),p={name:"weakmap.md"},o=l(`<p><a href="https://zh.javascript.info/weakmap-weakset" target="_blank" rel="noreferrer">详细查看</a><a href="https://www.yuque.com/moyanfs/js/gi4zn8?inner=ySbuC" target="_blank" rel="noreferrer">结构图详细查看</a></p><h3 id="weakset" tabindex="-1">WeakSet <a class="header-anchor" href="#weakset" aria-label="Permalink to &quot;WeakSet&quot;">​</a></h3><ul><li><p>你的代码可以访问它，但是 message 是由其他人的代码管理的。该代码会定期添加新消息，删除旧消息，但是你不知道这些操作确切的发生时间。</p></li><li><p>现在，你应该使用什么数据结构来保存关于消息“是否已读”的信息？该结构必须很适合对给定的 message 对象给出“它读了吗？”的答案。</p></li><li><p>P.S. 当一个消息被从 messages 中删除后，它应该也从你的数据结构中消失。</p></li><li><p>P.S. 我们不能修改 message 对象，例如向其添加我们的属性。因为它们是由其他人的代码管理的，我们修改该数据可能会导致不好的后果。</p></li><li><p>解决文案</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> messages </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  {text: </span><span style="color:#9ECBFF;">&quot;Hello&quot;</span><span style="color:#E1E4E8;">, from: </span><span style="color:#9ECBFF;">&quot;John&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">  {text: </span><span style="color:#9ECBFF;">&quot;How goes?&quot;</span><span style="color:#E1E4E8;">, from: </span><span style="color:#9ECBFF;">&quot;John&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">  {text: </span><span style="color:#9ECBFF;">&quot;See you soon&quot;</span><span style="color:#E1E4E8;">, from: </span><span style="color:#9ECBFF;">&quot;Alice&quot;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> readMessages </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WeakSet</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 两个消息已读</span></span>
<span class="line"><span style="color:#E1E4E8;">readMessages.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(messages[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">readMessages.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(messages[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// readMessages 包含两个元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ……让我们再读一遍第一条消息！</span></span>
<span class="line"><span style="color:#E1E4E8;">readMessages.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(messages[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// readMessages 仍然有两个不重复的元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 回答：message[0] 已读？</span></span>
<span class="line"><span style="color:#B392F0;">alert</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Read message 0: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> readMessages.</span><span style="color:#B392F0;">has</span><span style="color:#E1E4E8;">(messages[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">])); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">messages.</span><span style="color:#B392F0;">shift</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#6A737D;">// 现在 readMessages 有一个元素（技术上来讲，内存可能稍后才会被清理）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> messages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  {text: </span><span style="color:#032F62;">&quot;Hello&quot;</span><span style="color:#24292E;">, from: </span><span style="color:#032F62;">&quot;John&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">  {text: </span><span style="color:#032F62;">&quot;How goes?&quot;</span><span style="color:#24292E;">, from: </span><span style="color:#032F62;">&quot;John&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">  {text: </span><span style="color:#032F62;">&quot;See you soon&quot;</span><span style="color:#24292E;">, from: </span><span style="color:#032F62;">&quot;Alice&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> readMessages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WeakSet</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 两个消息已读</span></span>
<span class="line"><span style="color:#24292E;">readMessages.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(messages[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">readMessages.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(messages[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// readMessages 包含两个元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ……让我们再读一遍第一条消息！</span></span>
<span class="line"><span style="color:#24292E;">readMessages.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(messages[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#6A737D;">// readMessages 仍然有两个不重复的元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 回答：message[0] 已读？</span></span>
<span class="line"><span style="color:#6F42C1;">alert</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Read message 0: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> readMessages.</span><span style="color:#6F42C1;">has</span><span style="color:#24292E;">(messages[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">messages.</span><span style="color:#6F42C1;">shift</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6A737D;">// 现在 readMessages 有一个元素（技术上来讲，内存可能稍后才会被清理）</span></span></code></pre></div><h3 id="weakmap" tabindex="-1">WeakMap <a class="header-anchor" href="#weakmap" aria-label="Permalink to &quot;WeakMap&quot;">​</a></h3><ul><li>这儿有一个和 上一个任务 类似的 messages 数组。场景也相似。</li><li>现在的问题是：你建议采用什么数据结构来保存信息：“消息是什么时候被阅读的？”。</li><li>在前一个任务中我们只需要保存“是/否”。现在我们需要保存日期，并且它应该在消息被垃圾回收时也被从内存中清除。</li><li>P.S. 日期可以存储为内建的 Date 类的对象，稍后我们将进行介绍。</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> messages </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  {text: </span><span style="color:#9ECBFF;">&quot;Hello&quot;</span><span style="color:#E1E4E8;">, from: </span><span style="color:#9ECBFF;">&quot;John&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">  {text: </span><span style="color:#9ECBFF;">&quot;How goes?&quot;</span><span style="color:#E1E4E8;">, from: </span><span style="color:#9ECBFF;">&quot;John&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">  {text: </span><span style="color:#9ECBFF;">&quot;See you soon&quot;</span><span style="color:#E1E4E8;">, from: </span><span style="color:#9ECBFF;">&quot;Alice&quot;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> readMap </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WeakMap</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">readMap.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(messages[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">], </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2017</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> messages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  {text: </span><span style="color:#032F62;">&quot;Hello&quot;</span><span style="color:#24292E;">, from: </span><span style="color:#032F62;">&quot;John&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">  {text: </span><span style="color:#032F62;">&quot;How goes?&quot;</span><span style="color:#24292E;">, from: </span><span style="color:#032F62;">&quot;John&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">  {text: </span><span style="color:#032F62;">&quot;See you soon&quot;</span><span style="color:#24292E;">, from: </span><span style="color:#032F62;">&quot;Alice&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> readMap </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WeakMap</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">readMap.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(messages[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2017</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">));</span></span></code></pre></div>`,7),e=[o];function t(c,r,E,y,i,F){return a(),n("div",null,e)}const g=s(p,[["render",t]]);export{d as __pageData,g as default};
