import{_ as d,c as e,a1 as o,o as r}from"./chunks/framework.CJK9F0vG.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"document/javascript/cropper.md","filePath":"document/javascript/cropper.md"}'),a={name:"document/javascript/cropper.md"};function i(s,t,c,n,l,h){return r(),e("div",null,t[0]||(t[0]=[o(`<h3 id="options-参数" tabindex="-1">options 参数 <a class="header-anchor" href="#options-参数" aria-label="Permalink to &quot;options 参数&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>viewMode</td><td>定义裁剪器的视图模式。如果设置<code>viewMode</code>为<code>0</code>，则裁剪框可以延伸到画布之外，而<code>1</code>、<code>2</code>、 或的值<code>3</code>会将裁剪框限制为画布的大小。<code>viewMode</code>的<code>2</code>或<code>3</code>将额外限制画布到容器。之间不存在差异<code>2</code>并且<code>3</code>当所述画布与所述容器的比例是相同的。</td><td>String</td><td>0/1/2/3</td><td>0</td></tr><tr><td>dragMode</td><td>定义裁剪器的拖动模式</td><td>String</td><td>crop/move/none</td><td>crop</td></tr><tr><td>initialAspectRatio</td><td>定义裁剪框的初始纵横比。默认情况下，它与画布（图像包装器）的纵横比相同。<code>仅当该aspectRatio选项设置为时可用NaN。</code></td><td>Number</td><td>-</td><td>NaN</td></tr><tr><td>aspectRatio</td><td>定义裁剪框的固定纵横比。默认情况下，裁剪框具有自由比例。</td><td>Number</td><td>-</td><td>NaN</td></tr><tr><td>data</td><td>您之前存储的裁剪数据将<code>setData</code>在初始化时自动传递给该方法。 <code>仅在autoCrop选项设置为时可用true</code></td><td>Object</td><td>-</td><td>null</td></tr><tr><td>preview</td><td>一个元素或元素数组或节点列表对象或<code>Document.querySelectorAll</code>的有效选择器</td><td>Element, Array (elements), NodeList or String (selector)</td><td>-</td><td>&#39;&#39;</td></tr><tr><td>responsive</td><td>调整窗口大小时重新渲染裁剪器。</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>restore</td><td>调整窗口大小后恢复裁剪区域。</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>checkCrossOrigin</td><td>检查当前图像是否为跨域图像。如果是这样，<code>crossOrigin</code>将在克隆的图像元素中添加一个属性，并在该<code>src</code>属性中添加一个时间戳参数以重新加载源图像以避免浏览器缓存错误。向<code>crossOrigin</code>图像元素添加属性将停止向图像 <code>URL</code> 添加时间戳并停止重新加载图像。但是读取图像数据以进行方向检查的请求 <code>(XMLHttpRequest)</code> 将需要一个时间戳来破坏缓存以避免浏览器缓存错误。您可以将<code>checkOrientation</code>选项设置<code>false</code>为取消此请求。如果图片的<code>crossOrigin</code>属性值为&quot;<code>use-credentials</code>&quot;，则在通过 <code>XMLHttpRequest</code> 读取图片数据时，该<code>withCredentials</code>属性会设置为<code>true</code>。</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>checkOrientation</td><td>检查当前图像的 <code>Exif</code> 方向信息。请注意，只有 <code>JPEG</code> 图像可能包含 <code>Exif</code> 方向信息。确切地说，读取旋转或翻转图像的 <code>Orientation</code> 值，然后使用<code>1</code>（默认值）覆盖 <code>Orientation</code> 值以避免在 <code>iOS</code> 设备上出现一些问题<code>（1 , 2）</code>。需要同时设置<code>rotatable</code>和<code>scalable</code>选项<code>true</code>。注意：不要一直相信这一点，因为某些 <code>JPG</code> 图像可能具有不正确（非标准）的方向值.<code>需要类型数组支持（IE 10+）。</code></td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>modal</td><td>在图像上方和裁剪框下方显示黑色模式。</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>guides</td><td>在裁剪框上方显示虚线。</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>center</td><td>在裁剪框上方显示中心指示器。</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>highlight</td><td>在裁剪框上方显示白色模式（突出显示裁剪框）。</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>background</td><td>显示容器的网格背景</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>autoCrop</td><td>启用在初始化时自动裁剪图像</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>autoCropArea</td><td>它应该是一个介于 0 和 1 之间的数字。定义自动裁剪区域大小（百分比）。</td><td>Number</td><td>-</td><td><code>0.8</code>(图像的 <code>80%</code>)</td></tr><tr><td>movable</td><td>启用移动图像</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>rotatable</td><td>启用旋转图像</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>scalable</td><td>启用以伸缩图像</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>zoomable</td><td>启用以缩放图像</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>zoomOnTouch</td><td>启用通过拖动触摸来缩放图像。</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>zoomOnWheel</td><td>启用通过鼠标滚轮缩放图像。</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>wheelZoomRatio</td><td>通过鼠标滚轮缩放图像时定义缩放比例。</td><td>Number</td><td>-</td><td>0.1</td></tr><tr><td>cropBoxMovable</td><td>启用通过拖动移动裁剪框</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>cropBoxResizable</td><td>启用通过拖动来调整裁剪框的大小</td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>toggleDragModeOnDblclick</td><td>启用以在裁剪器上单击两次时在<code>crop</code>和之间切换拖动模式<code>move</code>。<code>需要dblclick事件支持</code></td><td>Boolean</td><td>-</td><td>true</td></tr><tr><td>minCanvasWidth</td><td>容器的最小宽度</td><td>Number</td><td>-</td><td>200</td></tr><tr><td>minCanvasHeight</td><td>容器的最小高度</td><td>Number</td><td>-</td><td>100</td></tr><tr><td>minCropBoxWidth</td><td>画布的最小宽度（图像包装器）</td><td>Number</td><td>-</td><td>0</td></tr><tr><td>minCropBoxHeight</td><td>画布的最小高度（图像包装器）</td><td>Number</td><td>-</td><td>0</td></tr><tr><td>minContainerWidth</td><td>裁剪框的最小宽度。<code>注意：此大小是相对于页面，而不是图像。</code></td><td>Number</td><td>-</td><td>0</td></tr><tr><td>minContainerHeight</td><td>裁剪框的最小高度。<code>注意：此大小是相对于页面，而不是图像。</code></td><td>Number</td><td>-</td><td>0</td></tr><tr><td>ready</td><td>ready事件的快捷方式。</td><td>Function</td><td>-</td><td>null</td></tr><tr><td>cropstart</td><td>cropstart事件的快捷方式。</td><td>Function</td><td>-</td><td>null</td></tr><tr><td>cropmove</td><td>cropmove事件的快捷方式</td><td>Function</td><td>-</td><td>null</td></tr><tr><td>cropend</td><td>cropend事件的快捷方式</td><td>Function</td><td>-</td><td>null</td></tr><tr><td>crop</td><td>crop事件的快捷方式</td><td>Function</td><td>-</td><td>null</td></tr><tr><td>zoom</td><td>zoom事件的快捷方式</td><td>Function</td><td>-</td><td>null</td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h4 id="crop-手动显示裁剪框" tabindex="-1">crop() 手动显示裁剪框 <a class="header-anchor" href="#crop-手动显示裁剪框" aria-label="Permalink to &quot;crop() 手动显示裁剪框&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Cropper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(image, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  autoCrop: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ready</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.cropper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//显示</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h4 id="reset-重置裁剪框" tabindex="-1">reset() 重置裁剪框 <a class="header-anchor" href="#reset-重置裁剪框" aria-label="Permalink to &quot;reset() 重置裁剪框&quot;">​</a></h4><h4 id="clear-隐藏裁剪框" tabindex="-1">clear() 隐藏裁剪框 <a class="header-anchor" href="#clear-隐藏裁剪框" aria-label="Permalink to &quot;clear() 隐藏裁剪框&quot;">​</a></h4><h4 id="replace-url-string-hassamesize-boolean" tabindex="-1">replace(url: string, hasSameSize: boolean) <a class="header-anchor" href="#replace-url-string-hassamesize-boolean" aria-label="Permalink to &quot;replace(url: string, hasSameSize: boolean)&quot;">​</a></h4><ol><li>url 一个新的图片网址</li><li>hasSameSize (可选) 默认 false</li></ol><ul><li>如果新图像与旧图像大小相同，则不会重建裁剪器，只会更新所有相关图像的 URL。这可用于应用过滤器。</li></ul>`,10)]))}const k=d(a,[["render",i]]);export{u as __pageData,k as default};
