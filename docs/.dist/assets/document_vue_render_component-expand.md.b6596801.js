import{_ as e,o as a,c as o,Q as t}from"./chunks/framework.f5532599.js";const p=JSON.parse('{"title":"组件的拓展","description":"","frontmatter":{},"headers":[],"relativePath":"document/vue/render/component-expand.md","filePath":"document/vue/render/component-expand.md"}'),r={name:"document/vue/render/component-expand.md"},n=t('<h1 id="组件的拓展" tabindex="-1">组件的拓展 <a class="header-anchor" href="#组件的拓展" aria-label="Permalink to &quot;组件的拓展&quot;">​</a></h1><h2 id="异步组件" tabindex="-1">异步组件 <a class="header-anchor" href="#异步组件" aria-label="Permalink to &quot;异步组件&quot;">​</a></h2><h2 id="指令的实现" tabindex="-1">指令的实现 <a class="header-anchor" href="#指令的实现" aria-label="Permalink to &quot;指令的实现&quot;">​</a></h2><h2 id="混入" tabindex="-1">混入 <a class="header-anchor" href="#混入" aria-label="Permalink to &quot;混入&quot;">​</a></h2><h2 id="实现-keepalive" tabindex="-1">实现 keepAlive <a class="header-anchor" href="#实现-keepalive" aria-label="Permalink to &quot;实现 keepAlive&quot;">​</a></h2><h2 id="memoize-的意义和实现" tabindex="-1">memoize 的意义和实现 <a class="header-anchor" href="#memoize-的意义和实现" aria-label="Permalink to &quot;memoize 的意义和实现&quot;">​</a></h2><h2 id="hooks-的意义和实现" tabindex="-1">hooks 的意义和实现 <a class="header-anchor" href="#hooks-的意义和实现" aria-label="Permalink to &quot;hooks 的意义和实现&quot;">​</a></h2><h2 id="错误处理" tabindex="-1">错误处理 <a class="header-anchor" href="#错误处理" aria-label="Permalink to &quot;错误处理&quot;">​</a></h2>',8),i=[n];function h(d,l,c,s,m,u){return a(),o("div",null,i)}const k=e(r,[["render",h]]);export{p as __pageData,k as default};
